[{"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/index.js":"1","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/App.js":"2","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/auth/LoginForm.js":"3","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/services/auth.js":"4","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/auth/SignUpForm.js":"5","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/auth/ProtectedRoute.js":"6","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/game/NavBar.js":"7","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/game/UsersList.js":"8","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/game/User.js":"9","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/auth/LogoutButton.js":"10","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/game/Game.js":"11","/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/game/letterboard/LetterBoard.js":"12"},{"size":219,"mtime":1609883333126,"results":"13","hashOfConfig":"14"},{"size":1626,"mtime":1610660616510,"results":"15","hashOfConfig":"14"},{"size":1266,"mtime":1610053470932,"results":"16","hashOfConfig":"14"},{"size":952,"mtime":1610053470932,"results":"17","hashOfConfig":"14"},{"size":1973,"mtime":1610053470932,"results":"18","hashOfConfig":"14"},{"size":275,"mtime":1610053470932,"results":"19","hashOfConfig":"14"},{"size":762,"mtime":1610053470932,"results":"20","hashOfConfig":"14"},{"size":637,"mtime":1610053470932,"results":"21","hashOfConfig":"14"},{"size":801,"mtime":1610053470932,"results":"22","hashOfConfig":"14"},{"size":296,"mtime":1610053470932,"results":"23","hashOfConfig":"14"},{"size":256,"mtime":1610660616510,"results":"24","hashOfConfig":"14"},{"size":5700,"mtime":1610660616510,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1fqv2fg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/index.js",[],["52","53"],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/App.js",[],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/auth/LoginForm.js",[],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/services/auth.js",[],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/auth/SignUpForm.js",[],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/auth/ProtectedRoute.js",[],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/game/NavBar.js",[],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/game/UsersList.js",[],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/game/User.js",[],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/auth/LogoutButton.js",[],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/game/Game.js",[],"/home/ezrapinsky/app-academy/portfolio-projects/capstone/word-spot/react-app/src/components/game/letterboard/LetterBoard.js",["54","55","56","57","58","59"],"import './letterboard.css';\nimport React, { useEffect, useState } from 'react';\n\nexport default function LetterBoard() {\n\tconst [boardLetters, setBoardLetters] = useState(['aako', 'bncb', 'cilc', 'dood']);\n\tconst [loaded, setLoaded] = useState(false);\n\tconst [selection, setSelection] = useState(null);\n\tconst [selectedLetters, setSelectedLetters] = useState([]);\n\tconst [letters, setLetters] = useState([]);\n\tconst [gridWords, setGridWords] = useState(['coo', 'bank', 'ban', 'coil']);\n\tconst [foundWords, setFoundWords] = useState([]);\n\tconst [gameMessage, setGameMessage] = useState('Select Any Letter To Start Spotting!');\n\tconst [score, setScore] = useState(0);\n\tconst foundWordMessages = [\n\t\t\"You're Doing Great!\",\n\t\t'Great Job!',\n\t\t'You Found Another One!',\n\t\t\"Wow! You're Really Good!\",\n\t\t'That Was A Hard One!',\n\t\t'Nice Spot!',\n\t];\n\tconst findArrIdxInArr = (array, item) => {\n\t\tlet idx;\n\t\tarray.forEach((el, i) => {\n\t\t\tif (el[0] === item[0] && el[1] === item[1]) {\n\t\t\t\tidx = i;\n\t\t\t}\n\t\t});\n\t\treturn idx;\n\t};\n\n\tconst handleLetterClick = e => {\n\t\tconst newMove = e.target // parses the location numbers\n\t\t\t.getAttribute('data-location')\n\t\t\t.split(',')\n\t\t\t.map(strNum => parseInt(strNum, 10));\n\t\tsetSelection(newMove);\n\t};\n\n\tconst deselectLetters = idx => {\n\t\tif (idx === 0) {\n\t\t\tselectedLetters.forEach(letter => {\n\t\t\t\tlet letterEle = document.getElementById(letter.toString());\n\t\t\t\tletterEle.classList.remove('selectedLetter');\n\t\t\t});\n\t\t\tsetSelectedLetters([]);\n\t\t\treturn;\n\t\t} else {\n\t\t\tconst deselectedLetters = selectedLetters.slice(idx, selectedLetters.length);\n\t\t\tsetSelectedLetters(selectedLetters.slice(0, idx));\n\t\t\tdeselectedLetters.forEach(deselectedLetter => {\n\t\t\t\tlet deselected = document.getElementById(deselectedLetter.toString());\n\t\t\t\tdeselected.classList.remove('selectedLetter');\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t};\n\n\tconst isValidMove = newMove => {\n\t\tif (!selectedLetters.length) return true;\n\t\tconst lastMove = selectedLetters[selectedLetters.length - 1];\n\t\tconst startX = Math.max(0, lastMove[0] - 1);\n\t\tconst endX = Math.min(lastMove[0] + 2, 4);\n\t\tconst startY = Math.max(0, lastMove[1] - 1);\n\t\tconst endY = Math.min(lastMove[1] + 2, 4);\n\t\tconst validMoves = [];\n\t\tfor (let x = startX; x < endX; x++) {\n\t\t\tfor (let y = startY; y < endY; y++) {\n\t\t\t\t// this if statement gets around javascript drawback where two objects can only be equal if they point to same object in memory\n\t\t\t\tif (!(lastMove[0] === x && lastMove[1] === y)) {\n\t\t\t\t\tvalidMoves.push([x, y]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn findArrIdxInArr(validMoves, newMove) + 1 ? true : false; // add 1 to allow reuslt of 0 to be valid move but result -1 will still be invalid.\n\t};\n\n\tuseEffect(() => {\n\t\tif (!selection) return;\n\t\tconst newMove = selection;\n\t\tconst newMoveEle = document.getElementById(newMove.toString());\n\t\tconst newLetter = newMoveEle.getAttribute('value');\n\t\t// checks if deselecting\n\t\tlet deselectedLetterIndex = findArrIdxInArr(selectedLetters, newMove);\n\t\t// takes care of exception when deselcting first selection at 0 index\n\t\tif (deselectedLetterIndex >= 0) {\n\t\t\tdeselectLetters(deselectedLetterIndex);\n\t\t} else if (isValidMove(newMove)) {\n\t\t\tsetSelectedLetters([...selectedLetters, newMove]);\n\t\t\tsetLetters([...letters, newLetter]);\n\t\t\tnewMoveEle.classList.add('selectedLetter');\n\t\t}\n\t\tconsole.log(newMoveEle.getBoundingClientRect());\n\t}, [selection]);\n\n\t// sudo code for algo to determine where to put a line connecting lines\n\t// e.target.getBoundingClientRect())\n\t// get x,y range of letter clicked on\n\t// get x,y range of last letter\n\t// set directino based on copmarison of x,y values of click\n\t// add child element that is absolutley positioned to the letter box\n\t// <div>style={{position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, transform: 'rotate(45deg')}}</div>\n\n\tconst handleWordSubmit = () => {\n\t\tlet submittedWord = letters.join('');\n\t\t// if already found word then unselect and play different noise\n\t\t// change gameplay message above board to You already spotted that word!\n\t\tif (foundWords.indexOf(submittedWord) >= 0) {\n\t\t\tconsole.log('found words are: ', foundWords);\n\t\t\tconsole.log('submitted word is: ', submittedWord);\n\t\t\tconsole.log(foundWords.indexOf(submittedWord));\n\t\t\tsetGameMessage(\"You've Already Found That Word! Try Again!\");\n\t\t} else if (gridWords.indexOf(submittedWord) >= 0 && foundWords.indexOf(submittedWord) < 0) {\n\t\t\tlet randomMessage = foundWordMessages[Math.floor(Math.random() * foundWordMessages.length)];\n\t\t\tsetGameMessage(randomMessage);\n\t\t\tsetFoundWords([...foundWords, submittedWord]);\n\t\t} else {\n\t\t\tsetGameMessage(\"Sorry, But That's Not A Word. Please Try Again!\");\n\t\t}\n\n\t\tdeselectLetters(0);\n\t\tsetLetters([]);\n\t\tsetSelectedLetters([]);\n\t};\n\tif (!loaded) {\n\t\tsetBoardLetters(\n\t\t\tboardLetters.map((row, rowNum) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={`row${rowNum}`} className='gridRow'>\n\t\t\t\t\t\t{row.split('').map((letter, colNum) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tdata-location={[colNum, rowNum]}\n\t\t\t\t\t\t\t\t\tkey={[colNum, rowNum]}\n\t\t\t\t\t\t\t\t\tclassName='letterContainer'\n\t\t\t\t\t\t\t\t\tvalue={letter}\n\t\t\t\t\t\t\t\t\tid={[colNum, rowNum]}\n\t\t\t\t\t\t\t\t\tonClick={handleLetterClick}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className='letter' value={letter} key={[colNum, rowNum, 'letter']}>\n\t\t\t\t\t\t\t\t\t\t{letter.toUpperCase()}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t\tsetLoaded(true);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{loaded && (\n\t\t\t\t<>\n\t\t\t\t\t<div id='messageContainer'>\n\t\t\t\t\t\t<p>{gameMessage}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='letterGridContainer'>\n\t\t\t\t\t\t<div id='letterGrid'>{boardLetters}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='buttonContainer'>\n\t\t\t\t\t\t<button className='spotWordBtn' onClick={handleWordSubmit}>\n\t\t\t\t\t\t\tSpot\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":7,"column":22,"nodeType":"66","messageId":"67","endLine":7,"endColumn":36},{"ruleId":"64","severity":1,"message":"68","line":11,"column":20,"nodeType":"66","messageId":"67","endLine":11,"endColumn":32},{"ruleId":"64","severity":1,"message":"69","line":14,"column":9,"nodeType":"66","messageId":"67","endLine":14,"endColumn":14},{"ruleId":"64","severity":1,"message":"70","line":14,"column":16,"nodeType":"66","messageId":"67","endLine":14,"endColumn":24},{"ruleId":"64","severity":1,"message":"71","line":25,"column":8,"nodeType":"66","messageId":"67","endLine":25,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":103,"column":5,"nodeType":"74","endLine":103,"endColumn":16,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'setboardLoaded' is assigned a value but never used.","Identifier","unusedVar","'setGridWords' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'fetchLetterBoard' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deselectLetters', 'isValidMove', 'letters', and 'selectedLetters'. Either include them or remove the dependency array. You can also do a functional update 'setSelectedLetters(s => ...)' if you only need 'selectedLetters' in the 'setSelectedLetters' call.","ArrayExpression",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [deselectLetters, isValidMove, letters, selectedLetters, selection]",{"range":"81","text":"82"},[3536,3547],"[deselectLetters, isValidMove, letters, selectedLetters, selection]"]